{
  "version": 3,
  "sources": ["../../gaussian/lib/box-muller.js", "../../gaussian/lib/gaussian.js"],
  "sourcesContent": ["/** \n * Box-Muller implementation\n * https://en.wikipedia.org/wiki/Box%E2%80%93Muller_transform\n */\n\n(function(exports){\n  const PRECISION = 1e9;\n  const _2PI = Math.PI * 2;\n\n  /**\n   *\n   * @param {number} mean\n   * @param {number} std\n   * @param randFn - an optional function that returns a float between 0 (inclusive) and 1\n   * (exclusive).  Use this if you want to pass in a random number generator other than\n   * Math.random().\n   * @returns {number}\n   */\n  function generateGaussian(mean,std, randFn = null){\n    var u1;\n    var u2;\n    if (randFn) {\n      u1 = randFn();\n      u2 = randFn();\n    }\n    else {\n      u1 = Math.random();\n      u2 = Math.random();\n    }\n    \n    var z0 = Math.sqrt(-2.0 * Math.log(u1)) * Math.cos(_2PI * u2);\n    var z1 = Math.sqrt(-2.0 * Math.log(u1)) * Math.sin(_2PI * u2);\n\n    return z0 * std + mean;\n  }\n\n  exports(generateGaussian)\n})\n(typeof(exports) !== \"undefined\"\n    ? function(e) { module.exports = e; }\n    // istanbul ignore next\n    : function(e) { this[\"boxmuller\"] = e; });\n  \n", "(function(exports) {\n\n  const generateGaussian = require('./box-muller');\n\n  // Complementary error function\n  // From Numerical Recipes in C 2e p221\n  var erfc = function(x) {\n    var z = Math.abs(x);\n    var t = 1 / (1 + z / 2);\n    var r = t * Math.exp(-z * z - 1.26551223 + t * (1.00002368 +\n            t * (0.37409196 + t * (0.09678418 + t * (-0.18628806 +\n            t * (0.27886807 + t * (-1.13520398 + t * (1.48851587 +\n            t * (-0.82215223 + t * 0.17087277)))))))))\n    return x >= 0 ? r : 2 - r;\n  };\n\n  // Inverse complementary error function\n  // From Numerical Recipes 3e p265\n  var ierfc = function(x) {\n    if (x >= 2) { return -100; }\n    if (x <= 0) { return 100; }\n\n    var xx = (x < 1) ? x : 2 - x;\n    var t = Math.sqrt(-2 * Math.log(xx / 2));\n\n    var r = -0.70711 * ((2.30753 + t * 0.27061) /\n            (1 + t * (0.99229 + t * 0.04481)) - t);\n\n    for (var j = 0; j < 2; j++) {\n      var err = erfc(r) - xx;\n      r += err / (1.12837916709551257 * Math.exp(-(r * r)) - r * err);\n    }\n\n    return (x < 1) ? r : -r;\n  };\n\n  // Models the normal distribution\n  var Gaussian = function(mean, variance) {\n    if (variance <= 0) {\n      throw new Error('Variance must be > 0 (but was ' + variance + ')');\n    }\n    this.mean = mean;\n    this.variance = variance;\n    this.standardDeviation = Math.sqrt(variance);\n  }\n\n  // Probability density function\n  Gaussian.prototype.pdf = function(x) {\n    var m = this.standardDeviation * Math.sqrt(2 * Math.PI);\n    var e = Math.exp(-Math.pow(x - this.mean, 2) / (2 * this.variance));\n    return e / m;\n  };\n\n  // Cumulative density function\n  Gaussian.prototype.cdf = function(x) {\n    return 0.5 * erfc(-(x - this.mean) / (this.standardDeviation * Math.sqrt(2)));\n  };\n\n  // Percent point function\n  Gaussian.prototype.ppf = function(x) {\n    return this.mean - this.standardDeviation * Math.sqrt(2) * ierfc(2 * x);\n  };\n\n  // Product distribution of this and d (scale for constant)\n  Gaussian.prototype.mul = function(d) {\n    if (typeof(d) === \"number\") {\n      return this.scale(d);\n    }\n    var precision = 1 / this.variance;\n    var dprecision = 1 / d.variance;\n    return fromPrecisionMean(\n        precision + dprecision, \n        precision * this.mean + dprecision * d.mean);\n  };\n\n  // Quotient distribution of this and d (scale for constant)\n  Gaussian.prototype.div = function(d) {\n    if (typeof(d) === \"number\") {\n      return this.scale(1 / d);\n    }\n    var precision = 1 / this.variance;\n    var dprecision = 1 / d.variance;\n    return fromPrecisionMean(\n        precision - dprecision, \n        precision * this.mean - dprecision * d.mean);\n  };\n\n  // Addition of this and d\n  Gaussian.prototype.add = function(d) {\n    return gaussian(this.mean + d.mean, this.variance + d.variance);\n  };\n\n  // Subtraction of this and d\n  Gaussian.prototype.sub = function(d) {\n    return gaussian(this.mean - d.mean, this.variance + d.variance);\n  };\n\n  // Scale this by constant c\n  Gaussian.prototype.scale = function(c) {\n    return gaussian(this.mean * c, this.variance * c * c);\n  };\n\n\n  /**\n   * Generate [num] random samples\n   * @param {number} num\n   * @param randFn - an optional function that returns a float between 0 (inclusive) and 1\n   * (exclusive).  Use this if you want to pass in a random number generator other than\n   * Math.random().\n   * @returns {number[]}\n   */\n  Gaussian.prototype.random = function(num, randFn = null){\n    let mean = this.mean;\n    let std = this.standardDeviation;\n    return Array(num).fill(0).map(() => {\n      return generateGaussian(mean,std, randFn)\n    })\n  };\n\n  var gaussian = function(mean, variance) {\n    return new Gaussian(mean, variance);\n  };\n\n  var fromPrecisionMean = function(precision, precisionmean) {\n    return gaussian(precisionmean / precision, 1 / precision);\n  };\n\n  exports(gaussian);\n})\n(typeof(exports) !== \"undefined\"\n    ? function(e) { module.exports = e; }\n    // istanbul ignore next\n    : function(e) { this[\"gaussian\"] = e; });\n\n"],
  "mappings": "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",
  "names": ["exports", "exports"]
}
